{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","assets/images/website_logo.png","componenets/Navbar.js","firebase.js","componenets/Home.js","componenets/AdminPanel.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","stakingContract","tokenContractAdress","stakingContractAdress","web3","errorMsg","blockchainReducer","state","action","type","payload","name","balanceof","pendingReward","allStakedAmount","userInfo","isValidator","participants","sharedWalletStakedAmount","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","balanceOf","getUserInfo","console","log","validatorBonusMultiplier","multiplier","parseInt","connectFailed","connect","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","enable","request","method","accounts","chainId","TokenContractObj","TokenContract","abi","StakingContractObj","StakingContract","on","updateAccount","location","reload","Navbar","useState","setButton","showButton","innerWidth","useEffect","addEventListener","bg","w","h","spacing","align","fontSize","fontWeight","p","borderRadius","_hover","href","as","FaTwitter","FaTelegramPlane","FaDiscord","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","Home","useDispatch","useSelector","stakingAmount","setstakingAmount","handleChange","event","target","value","EnodeAdress","setEnodeAdress","usersRequest","setusersRequest","triedConnect","approveStaking","approve","send","to","address","from","withdrawRewards","transferPendingRewardP","then","userinfo","maderequest","validators","index","adress","user","enodeAdress","status","minH","bgGradient","mx","px","mt","alignSelf","alignItems","borderColor","boxShadow","variant","onClick","onChange","placeholder","size","x","stakeTokens","withdrawStake","Object","keys","length","style","textAlign","addRequest","AdminPanel","requests","setrequests","getAuth","getFirestore","getRequestsLength","i","prevState","map","py","userAdress","defineValidator","once","err","receipt","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","resetCSS","document","getElementById"],"mappings":"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","file":"static/js/main.54048dff.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  stakingContract: null,\n  tokenContractAdress:null,\n  stakingContractAdress: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        stakingContract: action.payload.stakingContract,\n        tokenContractAdress:action.payload.tokenContractAdress,\n        stakingContractAdress: action.payload.stakingContractAdress,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  name: \"\",\n  balanceof: 0,\n  pendingReward: 0,\n  allStakedAmount: 0,\n  userInfo: null,\n  isValidator: null,\n  participants: 0,\n  sharedWalletStakedAmount: 0,  \n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        name: action.payload.name,\n        balanceof: action.payload.balanceof,\n        pendingReward: action.payload.pendingReward,\n        allStakedAmount: action.payload.allStakedAmount,\n        userInfo: action.payload.userInfo,\n        isValidator: action.payload.isValidator,\n        participants: action.payload.participants,\n        sharedWalletStakedAmount: action.payload.sharedWalletStakedAmount,\n           \n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = (account) => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let name = await store\n        .getState()\n        .blockchain.smartContract.methods.name()\n        .call();        \n      let balanceof = await store\n        .getState()\n        .blockchain.smartContract.methods.balanceOf(account)\n        .call();         \n      let pendingReward = await store\n        .getState()\n        .blockchain.stakingContract.methods.pendingReward(account)\n        .call();\n      let allStakedAmount = await store\n        .getState()\n        .blockchain.stakingContract.methods.allStakedAmount()\n        .call();\n      let userInfo = await store\n        .getState()\n        .blockchain.stakingContract.methods.getUserInfo(account)\n        .call();\n      console.log(userInfo)\n      let isValidator = await store\n        .getState()\n        .blockchain.stakingContract.methods.isValidator(account)\n        .call();\n      let multiplier = await store\n        .getState()\n        .blockchain.stakingContract.methods.validatorBonusMultiplier()\n        .call();\n      \n      \n\n      if(isValidator){\n        isValidator = \"True\";\n        userInfo[0]=userInfo[0]*10/multiplier;\n      }else{\n        isValidator = \"False\";\n      }\n\n      let participants = await store\n        .getState()\n        .blockchain.stakingContract.methods.participants()\n        .call();\n      let sharedWalletStakedAmount = await store\n        .getState()\n        .blockchain.stakingContract.methods.sharedWalletStakedAmount()\n        .call();\n      allStakedAmount=parseInt((allStakedAmount-sharedWalletStakedAmount)*10/multiplier) +parseInt(sharedWalletStakedAmount);\n\n      dispatch(\n        fetchDataSuccess({\n          name,\n          balanceof,\n          pendingReward,\n          allStakedAmount,\n          userInfo,\n          isValidator,\n          participants,\n          sharedWalletStakedAmount,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\nimport TokenContract from \"../../contracts/StandartToken.json\";\nimport StakingContract from \"../../contracts/StakingPool.json\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        // Request account access if needed\n        await window.ethereum.enable();\n        console.log(\"connected\");        \n      } catch (error) {\n        console.error(error);\n      }      \n      try {\n        console.log(\"1\");\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        \n        //const NetworkData = await SmartContract.networks[networkId];\n        const chainId = await ethereum.request({ method: 'eth_chainId' });\n        console.log(chainId);\n        if (chainId==\"0x4de\") {       //0xa86a mainnetin chain id'si, 0xa869 fuji netin chain idsi\n          const tokenContractAdress = \"0x95C1A7F0640129F1Ab6c963EA706A7Ac9658fAcd\";\n          const stakingContractAdress = \"0x49531507C026E2873a3e3aA61fAdB28853f4Dc21\";\n          const TokenContractObj = new Web3EthContract(\n            //SmartContract.abi,\n            //NetworkData.address            \n            TokenContract.abi,\n            tokenContractAdress\n          );\n          const StakingContractObj = new Web3EthContract(\n            //SmartContract.abi,\n            //NetworkData.address            \n            StakingContract.abi,\n            stakingContractAdress\n          );\n          console.log(StakingContractObj);\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: TokenContractObj,\n              stakingContract: StakingContractObj,\n              tokenContractAdress:tokenContractAdress,\n              stakingContractAdress: stakingContractAdress,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });          \n          // Add listeners end\n        } else {\n          dispatch(connectFailed(\"Change network to Avalanche.\"));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","export default __webpack_public_path__ + \"static/media/website_logo.30ee4a2b.png\";","import React, { useState, useEffect } from 'react'\nimport { Box, HStack, Image, Flex, Spacer } from '@chakra-ui/react'\nimport Logo from \"../assets/images/website_logo.png\"\nimport { FaTwitter, FaTelegramPlane, FaDiscord } from \"react-icons/fa\"\nimport { Icon } from '@chakra-ui/icons';\n\n\nfunction Navbar() {\n    const [click, setClick] = useState(false);\n    const [button, setButton] = useState(true);\n\n    const handleClick = () => setClick(!click);\n    const closeMobileMenu = () => setClick(false)\n\n    const showButton = () => {\n        if (window.innerWidth <= 960) {\n            setButton(false);\n        } else {\n            setButton(true);\n        }\n    };\n\n    useEffect(() => {\n        showButton();\n    }, []);\n\n    window.addEventListener('resize', showButton);\n\n    return (\n        <div>\n            <Flex\n                bg='yellow.500'\n                w='100%'\n                h='16vh'\n                spacing='auto'\n                \n                \n            >\n                <Spacer />\n                <HStack >\n                    <Box\n                        align='center'\n                        w='4vw'\n                        fontSize='3xl'\n                        fontWeight='semibold'\n                        p='3'\n                        borderRadius='xl'\n                        _hover={{ borderRadius: 'xl', fontSize: '4xl' }}\n                    >\n                        <a href='https://avaxfoxes.com/'>\n                            <Icon as={FaTwitter} />\n                        </a>\n                    </Box>\n                    <Box\n                        align='center'\n                        w='4vw'\n                        fontSize='3xl'\n                        fontWeight='semibold'\n                        p='3'\n                        borderRadius='xl'\n                        _hover={{ borderRadius: 'xl', fontSize: '4xl' }}\n                    >\n                        <a href='https://avaxfoxes.com/'>\n                            <Icon as={FaTelegramPlane} />\n                        </a>\n                    </Box>\n                    <Box\n                        align='center'\n                        w='4vw'\n                        fontSize='3xl'\n                        fontWeight='semibold'\n                        p='3'\n                        borderRadius='xl'\n                        _hover={{ borderRadius: 'xl', fontSize: '4xl' }}\n                    >\n                        <a href='https://avaxfoxes.com/'>\n                            <Icon as={FaDiscord} />\n                        </a>\n                    </Box>\n                </HStack>\n            </Flex>\n\n        </div>\n    )\n}\n\nexport default Navbar\n","import { initializeApp } from \"firebase/app\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAJF4usMCpod-bH00Tw211jj3DHtu8opJI\",\r\n    authDomain: \"staking-2a1ce.firebaseapp.com\",\r\n    projectId: \"staking-2a1ce\",\r\n    storageBucket: \"staking-2a1ce.appspot.com\",\r\n    messagingSenderId: \"3455903179\",\r\n    appId: \"1:3455903179:web:614a3e3e18c8a61cab024e\"\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n\r\nexport default app;","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { connect } from \"../redux/blockchain/blockchainActions\";\r\nimport { fetchData } from \"../redux/data/dataActions\";\r\nimport { Box, Container, Text, Spacer, VStack, HStack, Button, Center, Flex, Image, Input } from \"@chakra-ui/react\";\r\nimport Navbar from \"./Navbar\";\r\nimport app from '../firebase.js';\r\nimport { collection, addDoc, setDoc, doc, getDoc } from \"firebase/firestore\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\r\n\r\nfunction Home() {\r\n  const dispatch = useDispatch();\r\n  const blockchain = useSelector((state) => state.blockchain);\r\n  const data = useSelector((state) => state.data);\r\n  const [stakingAmount, setstakingAmount] = useState(0);\r\n  const handleChange = event => setstakingAmount(event.target.value);\r\n\r\n  const [EnodeAdress, setEnodeAdress] = useState(\"\");\r\n  const handleChangeEnodeAdress = event => setEnodeAdress(event.target.value);\r\n  const [usersRequest, setusersRequest] = useState({});\r\n\r\n\r\n  var triedConnect = false; \r\n\r\n\r\n  const getData = () => {\r\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n      dispatch(fetchData(blockchain.account));\r\n    }\r\n  };\r\n\r\n  const validatorApply = () => {\r\n    //console.log(blockchain.stakingContract.address)\r\n    blockchain.stakingContract.methods\r\n      .addRequest(EnodeAdress)\r\n      .send({\r\n        to: blockchain.smartContract.address, // Smart Contract Adress\r\n        from: blockchain.account,\r\n      })\r\n  };\r\n  const approveStaking = () => {\r\n    //console.log(blockchain.stakingContract.address)\r\n\r\n    blockchain.smartContract.methods\r\n      .approve(blockchain.stakingContractAdress, 1e12)\r\n      .send({\r\n        to: blockchain.smartContract.address, // Smart Contract Adress\r\n        from: blockchain.account,\r\n      })\r\n  };\r\n  const StakeSharedWallet = () => {\r\n    //console.log(blockchain.stakingContract.methods)\r\n    blockchain.stakingContract.methods\r\n      .stakeTokens(stakingAmount * 1e2, false)\r\n      .send({\r\n        to: blockchain.stakingContract.address, // Smart Contract Adress\r\n        from: blockchain.account,\r\n      })\r\n  };\r\n  const Stake = () => {\r\n    //console.log(blockchain.account)\r\n    blockchain.stakingContract.methods\r\n      .stakeTokens(stakingAmount * 1e2, true)\r\n      .send({\r\n        to: blockchain.stakingContract.address, // Smart Contract Adress\r\n        from: blockchain.account,\r\n      })\r\n  };\r\n  const withdrawStake = () => {\r\n    //console.log(blockchain.account)\r\n    blockchain.stakingContract.methods\r\n      .withdrawStake()\r\n      .send({\r\n        to: blockchain.stakingContract.address, // Smart Contract Adress\r\n        from: blockchain.account,\r\n      })\r\n  };\r\n  const withdrawRewards = () => {\r\n    //console.log(blockchain.account)\r\n    blockchain.stakingContract.methods\r\n      .transferPendingRewardP()\r\n      .send({\r\n        to: blockchain.stakingContract.address, // Smart Contract Adress\r\n        from: blockchain.account,\r\n      })\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    if (blockchain.account != null) {\r\n      blockchain.stakingContract.methods.userInfo(blockchain.account).call()\r\n      .then((userinfo)=>{\r\n        if(userinfo.maderequest){\r\n          blockchain.stakingContract.methods.validators(userinfo.index).call()\r\n          .then((request)=>{\r\n            setusersRequest({ adress: request.user, enodeAdress: request.enodeAdress, status: request.status });\r\n          })\r\n        }        \r\n      })\r\n      \r\n    }\r\n\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n      getData();\r\n    } else {\r\n      if (!triedConnect) {\r\n        triedConnect = true;\r\n        dispatch(connect())\r\n      }\r\n    }\r\n  }, [blockchain.smartContract, blockchain.account]);\r\n\r\n\r\n  return (\r\n    <div>\r\n\r\n      <VStack w='100%' minH='80vh' bgGradient='linear(to-t, #F9A602, gray.700)' >\r\n        <HStack w='100%' h='30vh' mx={'5vw'} px={'5vw'} mt={'8%'}>\r\n          <Box w='30vw' h='30vh' bg='red' borderRadius={100} bgGradient='radial(#F9A602, white)' alignSelf={'middle'} >\r\n            <VStack alignItems={'center'} mt='4%'>\r\n              <Button borderColor=\"black\" borderRadius='20' boxShadow='lg' variant=\"outline\"\r\n                onClick={() => {\r\n                  approveStaking()\r\n                }}>\r\n                Approve\r\n              </Button>\r\n\r\n              <Input value={stakingAmount} onChange={handleChange} placeholder=\"Amount to Stake\" size=\"sm\" borderRadius='20' bg='white.200' w={'30%'} x />\r\n              <Button borderColor=\"black\" borderRadius='20' boxShadow='lg' variant=\"outline\"\r\n                onClick={() => {\r\n                  StakeSharedWallet()\r\n                }}>\r\n                StakeSharedWallet\r\n              </Button>\r\n\r\n              <Button borderColor=\"black\" borderRadius='20' boxShadow='lg' variant=\"outline\"\r\n                onClick={() => {\r\n                  withdrawRewards()\r\n                }}>\r\n                withdrawRewards\r\n              </Button>\r\n            </VStack>\r\n          </Box>\r\n          <Box w='30vw' h='30vh' bg='red' borderRadius={100} bgGradient='radial(#F9A602, white)' alignSelf={'middle'} >\r\n            <VStack alignItems={'center'} mt='4%'>\r\n              <Button borderColor=\"black\" borderRadius='20' boxShadow='lg' variant=\"outline\"\r\n                onClick={() => {\r\n                  approveStaking()\r\n                }}>\r\n                Approve\r\n              </Button>\r\n\r\n              <Input value={stakingAmount} onChange={handleChange} placeholder=\"Amount to Stake\" size=\"sm\" borderRadius='20' bg='white.200' w={'30%'} x />\r\n              <Button borderColor=\"black\" borderRadius='20' boxShadow='lg' variant=\"outline\"\r\n                onClick={() => {\r\n                  Stake()\r\n                }}>\r\n                Stake\r\n              </Button>\r\n\r\n              <Button borderColor=\"black\" borderRadius='20' boxShadow='lg' variant=\"outline\"\r\n                onClick={() => {\r\n                  withdrawRewards()\r\n                }}>\r\n                withdrawRewards\r\n              </Button>\r\n              <Button borderColor=\"black\" borderRadius='20' boxShadow='lg' variant=\"outline\"\r\n                onClick={() => {\r\n                  withdrawStake()\r\n                }}>\r\n                withdrawStake\r\n              </Button>\r\n            </VStack>\r\n          </Box>\r\n          <Box w='30vw' h='30vh' bg='red' borderRadius={100} bgGradient='radial(#F9A602, white)' alignSelf={'middle'} >\r\n            <VStack alignItems={'center'} mt='4%'>\r\n              {blockchain.account === \"\" || blockchain.smartContract === null || data.userInfo === null ? (\r\n                <Button borderColor=\"black\" borderRadius='20' boxShadow='lg' variant=\"outline\"\r\n                  onClick={() => {\r\n                    dispatch(connect())\r\n                  }}>\r\n                  connect\r\n                </Button>\r\n              ) : (\r\n                <VStack>\r\n                  <Text>\r\n                    {blockchain.account}\r\n                  </Text>\r\n                  <Text>\r\n                    Balance: {data.balanceof / 1e2}\r\n                  </Text>\r\n\r\n                  <Text>Pending Reward: {data.pendingReward / 1e18}</Text>\r\n                  <Text>All Staked Amount: {data.allStakedAmount / 1e2}</Text>\r\n                  <Text>User Staked Amount: {data.userInfo[0] / 1e2}</Text>\r\n                  <Text>Is Validator: {data.isValidator}</Text>\r\n                  <Text>Number of Participants: {data.participants}</Text>\r\n                  <Text>Shared Wallet Staked Amount: {data.sharedWalletStakedAmount / 1e2}</Text>\r\n\r\n                </VStack>\r\n\r\n              )}\r\n\r\n            </VStack>\r\n          </Box>\r\n        </HStack>\r\n        <Box w='30vw' h='30vh' bg='red' borderRadius={100} bgGradient='radial(#F9A602, white)' alignSelf={'middle'} >\r\n          <VStack alignItems={'center'} mt='4%'>\r\n            {!(Object.keys(usersRequest).length === 0) ? (\r\n              <div>\r\n                <Text style={{ textAlign: \"center\" }}>  <strong>You have a request! </strong> </Text>\r\n                <Text style={{ textAlign: \"center\" }}>  <strong>{usersRequest.adress} </strong> </Text>\r\n                <Text style={{ textAlign: \"center\" }}>  {usersRequest.enodeAdress} </Text>\r\n                <Text style={{ textAlign: \"center\" }}>  <strong> Status:</strong> <strong>{usersRequest.status} </strong></Text>\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <Input value={EnodeAdress} onChange={handleChangeEnodeAdress} placeholder=\"Enode Adress\" size=\"sm\" borderRadius='20' bg='white.200' w={'30%'} x />\r\n\r\n                <Button borderColor=\"black\" borderRadius='20' boxShadow='lg' variant=\"outline\"\r\n                  onClick={() => {\r\n                    validatorApply()\r\n                  }}>\r\n                  Apply to be a Validator\r\n                </Button>\r\n              </div>\r\n            )\r\n            }\r\n\r\n\r\n          </VStack>\r\n        </Box>\r\n\r\n\r\n      </VStack>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { connect } from \"../redux/blockchain/blockchainActions\";\r\nimport { fetchData } from \"../redux/data/dataActions\";\r\nimport { Box, Container, Text, Spacer, VStack, HStack, Button, Center, Flex, Image, Input } from \"@chakra-ui/react\";\r\nimport Navbar from \"./Navbar\";\r\nimport app from '../firebase.js';\r\nimport { collection, addDoc, setDoc, doc, snapshotEqual } from \"firebase/firestore\";\r\nimport { getFirestore, getDocs, getDoc } from \"firebase/firestore\";\r\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\r\n\r\nfunction AdminPanel() {\r\n    const dispatch = useDispatch();\r\n    const blockchain = useSelector((state) => state.blockchain);\r\n    const data = useSelector((state) => state.data);\r\n    const [id, setid] = useState(\"\");\r\n    const handleChangeid = event => setid(event.target.value);\r\n    const [password, setpassword] = useState(\"\");\r\n    const handleChangepassword = event => setpassword(event.target.value);\r\n    const [requests, setrequests] = useState([]);\r\n    var triedConnect = false;\r\n    const auth = getAuth();\r\n\r\n    const db = getFirestore(app);\r\n\r\n\r\n\r\n    const getRequestsData = () => {\r\n        if (blockchain.account != null) {\r\n        setrequests([]);\r\n        blockchain.stakingContract.methods.getRequestsLength().call()\r\n        .then((length)=>{\r\n            console.log(length)\r\n            for(let i=0;i<length;i++){\r\n                blockchain.stakingContract.methods.validators(i).call()\r\n                .then((request)=>{\r\n                    setrequests((prevState) => [\r\n                        ...prevState,\r\n                        { adress: request.user, enodeAdress: request.enodeAdress, status: request.status },\r\n                    ]);\r\n                })\r\n            }    \r\n        })\r\n        }\r\n    };\r\n    \r\n    const approveValidator = (userAdress) => {\r\n        //console.log(userAdress) \r\n        if (blockchain.account != null) {\r\n            blockchain.stakingContract.methods\r\n                .defineValidator(userAdress, true)\r\n                .send({\r\n                    to: blockchain.stakingContract.address, // Smart Contract Adress\r\n                    from: blockchain.account,\r\n                })\r\n                .once(\"error\", (err) => {\r\n                    console.log(err);\r\n                })\r\n                .then((receipt) => {\r\n                    //changeUserStatus(userAdress,'approved to stake')\r\n                });\r\n\r\n        } else {\r\n            console.log(\"you are not connected\")\r\n        }\r\n    };\r\n\r\n\r\n    const getData = () => {\r\n        if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n            dispatch(fetchData(blockchain.account));\r\n        }\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n            getData();\r\n            getRequestsData();\r\n        } else {\r\n            if (!triedConnect) {\r\n                triedConnect = true;\r\n                dispatch(connect())\r\n            }\r\n        }\r\n    }, [blockchain.smartContract, blockchain.account]);\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <VStack w='100%' minH='80vh' bgGradient='linear(to-t, #F9A602, gray.700)' >\r\n                \r\n                {requests.map((usersRequest, index) => {\r\n\r\n                    return (\r\n                        <VStack align='center' key={index} w='90vw' h='20vh' bg='whiteAlpha.600' py='1vh' borderRadius='xl' boxShadow='xl' spacing='1%'>\r\n                            <Text style={{ textAlign: \"center\" }}>  <strong>{usersRequest.adress} </strong> </Text>\r\n                            <Text style={{ textAlign: \"center\" }}>  {usersRequest.enodeAdress} </Text>\r\n                            <Text style={{ textAlign: \"center\" }}>  <strong> Status:</strong> <strong>{usersRequest.status} </strong></Text>\r\n                            <Button borderColor=\"black\" borderRadius='20' boxShadow='lg' variant=\"outline\"\r\n                                onClick={() => {\r\n                                    approveValidator(usersRequest.adress);\r\n                                }}>\r\n                                EnableToStake\r\n                            </Button>\r\n                        </VStack>\r\n                    );\r\n                })\r\n                }\r\n\r\n            </VStack>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdminPanel;\r\n","import React, { useEffect, useState, useRef } from \"react\";\nimport Home from \"./componenets/Home\";\nimport {BrowserRouter as Router, Switch, Route, Link} from 'react-router-dom';\nimport AdminPanel from \"./componenets/AdminPanel\";\nimport Navbar from \"./componenets/Navbar\";\nfunction App() {\n\n\n\n  return (\n    <div>\n      <Router>\n      <Navbar />\n        <Switch>\n          <Route path='/' exact component={Home} />\n          <Route path='/adminpanel' exact component={AdminPanel} />\n        </Switch>\n        \n      </Router> \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ChakraProvider resetCSS>  \n        <App />      \n      </ChakraProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}